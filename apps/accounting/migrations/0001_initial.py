# Generated by Django 5.2.7 on 2025-10-27 13:50

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(help_text='Month number (1-12)', validators=[django.core.validators.MinValueValidator(1)])),
                ('year', models.IntegerField(help_text='Year (e.g., 2024)', validators=[django.core.validators.MinValueValidator(2020)])),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed'), ('RECONCILED', 'Reconciled')], default='OPEN', max_length=20)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total revenue from sales', max_digits=12)),
                ('total_direct_costs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total direct costs (ingredients, packaging)', max_digits=12)),
                ('total_indirect_costs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total indirect costs (diesel, firewood, etc.)', max_digits=12)),
                ('total_payroll_costs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total payroll (permanent + casual)', max_digits=12)),
                ('total_other_expenses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Other miscellaneous expenses', max_digits=12)),
                ('gross_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Revenue - Direct Costs', max_digits=12)),
                ('net_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Gross Profit - Indirect Costs - Payroll - Other Expenses', max_digits=12)),
                ('profit_margin', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Net Profit / Revenue Ã— 100 (%)', max_digits=5)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('reconciled_at', models.DateTimeField(blank=True, null=True)),
                ('reconciled_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-year', '-month'],
                'indexes': [models.Index(fields=['month', 'year'], name='accounting__month_36b869_idx'), models.Index(fields=['status'], name='accounting__status_0ff0cd_idx')],
                'unique_together': {('month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('SALE', 'Sale'), ('PURCHASE', 'Purchase'), ('PRODUCTION', 'Production'), ('PAYROLL', 'Payroll'), ('ADJUSTMENT', 'Adjustment'), ('OPENING_BALANCE', 'Opening Balance')], max_length=20)),
                ('date', models.DateField(help_text='Transaction date')),
                ('reference_number', models.CharField(help_text='Unique reference (e.g., SAL-001, PUR-001)', max_length=50, unique=True)),
                ('description', models.TextField(help_text='Description of the transaction')),
                ('total_debit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_credit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_posted', models.BooleanField(default=False, help_text='Whether entry is posted to ledger')),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('source_app', models.CharField(blank=True, help_text='Source app (sales, production, etc.)', max_length=50, null=True)),
                ('source_model', models.CharField(blank=True, help_text='Source model name', max_length=50, null=True)),
                ('source_id', models.IntegerField(blank=True, help_text='Source object ID', null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('accounting_period', models.ForeignKey(help_text='Accounting period this entry belongs to', on_delete=django.db.models.deletion.PROTECT, related_name='journal_entries', to='accounting.accountingperiod')),
            ],
            options={
                'verbose_name': 'Journal Entry',
                'verbose_name_plural': 'Journal Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LedgerAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_code', models.CharField(help_text='Unique account code (e.g., 1000, 2000)', max_length=20, unique=True)),
                ('account_name', models.CharField(help_text='Account name (e.g., Cash, Sales Revenue)', max_length=200)),
                ('account_type', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('REVENUE', 'Revenue'), ('EXPENSE', 'Expense')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current balance (updated by journal entries)', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('parent_account', models.ForeignKey(blank=True, help_text='Parent account (for sub-accounts)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_accounts', to='accounting.ledgeraccount')),
            ],
            options={
                'ordering': ['account_code'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntryLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_type', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='accounting.journalentry')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='journal_lines', to='accounting.ledgeraccount')),
            ],
            options={
                'ordering': ['journal_entry', 'line_type', '-amount'],
            },
        ),
        migrations.CreateModel(
            name='TrialBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_debits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_credits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('is_balanced', models.BooleanField(default=False, help_text='Whether debits equal credits')),
                ('variance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Difference between debits and credits (should be 0)', max_digits=12)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('accounting_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trial_balances', to='accounting.accountingperiod')),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['date'], name='accounting__date_e3f521_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['entry_type'], name='accounting__entry_t_5e6cde_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['reference_number'], name='accounting__referen_606a7c_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['accounting_period'], name='accounting__account_618aa8_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgeraccount',
            index=models.Index(fields=['account_code'], name='accounting__account_168869_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgeraccount',
            index=models.Index(fields=['account_type'], name='accounting__account_f6ebe5_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentryline',
            index=models.Index(fields=['journal_entry', 'line_type'], name='accounting__journal_3f9de2_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentryline',
            index=models.Index(fields=['account'], name='accounting__account_6fdc67_idx'),
        ),
        migrations.AddIndex(
            model_name='trialbalance',
            index=models.Index(fields=['accounting_period'], name='accounting__account_379d50_idx'),
        ),
    ]
