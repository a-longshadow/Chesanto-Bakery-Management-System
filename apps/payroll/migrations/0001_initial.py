# Generated by Django 5.2.7 on 2025-10-27 13:42

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CasualLabor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of work')),
                ('worker_name', models.CharField(help_text='Name of casual worker(s)', max_length=200)),
                ('number_of_workers', models.IntegerField(default=1, help_text='Number of workers for this entry', validators=[django.core.validators.MinValueValidator(1)])),
                ('task_description', models.CharField(help_text='Description of work performed', max_length=500)),
                ('daily_rate', models.DecimalField(decimal_places=2, help_text='Daily rate per worker (KES)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount paid (auto-calculated: workers Ã— rate)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid')], default='PENDING', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Casual Labor Entry',
                'verbose_name_plural': 'Casual Labor Entries',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='payroll_cas_date_1285f4_idx'), models.Index(fields=['payment_status'], name='payroll_cas_payment_40bf74_idx')],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(help_text='Unique employee ID (e.g., EMP001)', max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('employee_type', models.CharField(choices=[('PERMANENT', 'Permanent Employee'), ('CONTRACT', 'Contract Employee')], default='PERMANENT', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('TERMINATED', 'Terminated')], default='ACTIVE', max_length=20)),
                ('position', models.CharField(help_text='Job title/position', max_length=100)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('hire_date', models.DateField(help_text='Date of employment')),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('basic_salary', models.DecimalField(decimal_places=2, help_text='Monthly basic salary (KES)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly housing allowance (KES)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly transport allowance (KES)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('other_allowances', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Other monthly allowances (KES)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('kra_pin', models.CharField(blank=True, help_text='KRA PIN for PAYE', max_length=20, null=True)),
                ('nssf_number', models.CharField(blank=True, help_text='NSSF membership number', max_length=20, null=True)),
                ('nhif_number', models.CharField(blank=True, help_text='NHIF membership number', max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('pension_contribution_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Pension contribution rate as percentage of basic salary', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about employee', null=True)),
            ],
            options={
                'ordering': ['employee_id'],
                'indexes': [models.Index(fields=['employee_id'], name='payroll_emp_employe_99937b_idx'), models.Index(fields=['status'], name='payroll_emp_status_98fdd7_idx'), models.Index(fields=['hire_date'], name='payroll_emp_hire_da_724e86_idx')],
            },
        ),
        migrations.CreateModel(
            name='MonthlyPayroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(help_text='Month number (1-12)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('year', models.IntegerField(help_text='Year (e.g., 2024)', validators=[django.core.validators.MinValueValidator(2020)])),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PROCESSING', 'Processing'), ('APPROVED', 'Approved'), ('PAID', 'Paid'), ('FINALIZED', 'Finalized')], default='DRAFT', max_length=20)),
                ('total_gross', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total gross salary for all employees', max_digits=12)),
                ('total_paye', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total PAYE deductions', max_digits=12)),
                ('total_nhif', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total NHIF deductions', max_digits=12)),
                ('total_nssf', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total NSSF deductions', max_digits=12)),
                ('total_pension', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total pension contributions', max_digits=12)),
                ('total_other_deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total other deductions (loans, advances, etc.)', max_digits=12)),
                ('total_net', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total net pay for all employees', max_digits=12)),
                ('processed_by', models.CharField(blank=True, help_text='User who processed payroll', max_length=100, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.CharField(blank=True, help_text='User who approved payroll', max_length=100, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, help_text='Date payroll was paid', null=True)),
                ('finalized_at', models.DateTimeField(blank=True, help_text='Date payroll was finalized (locked)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-year', '-month'],
                'indexes': [models.Index(fields=['month', 'year'], name='payroll_mon_month_fcf34c_idx'), models.Index(fields=['status'], name='payroll_mon_status_3da440_idx')],
                'unique_together': {('month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='PayrollItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_salary', models.DecimalField(decimal_places=2, help_text='Basic salary for this month', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('other_allowances', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('overtime_pay', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Overtime payment for this month', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('bonus', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Bonus payment for this month', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('paye', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='PAYE (Pay As You Earn) tax', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('nhif', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='NHIF (National Hospital Insurance Fund)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('nssf', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='NSSF (National Social Security Fund)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('pension', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Pension contribution', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('loan_deduction', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Loan repayment deduction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('advance_deduction', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Salary advance deduction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('other_deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Other miscellaneous deductions', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('days_worked', models.IntegerField(default=30, help_text='Number of days worked this month (for pro-rata calculation)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(help_text='Employee', on_delete=django.db.models.deletion.PROTECT, related_name='payroll_items', to='payroll.employee')),
                ('payroll', models.ForeignKey(help_text='Monthly payroll period', on_delete=django.db.models.deletion.CASCADE, related_name='payroll_items', to='payroll.monthlypayroll')),
            ],
            options={
                'ordering': ['employee__employee_id'],
                'indexes': [models.Index(fields=['payroll', 'employee'], name='payroll_pay_payroll_6c5039_idx')],
                'unique_together': {('payroll', 'employee')},
            },
        ),
    ]
