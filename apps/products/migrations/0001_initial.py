# Generated by Django 5.2.7 on 2025-10-27 09:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingredient name (e.g., Wheat Flour, Yeast)', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('default_unit', models.CharField(choices=[('g', 'Grams'), ('kg', 'Kilograms'), ('ml', 'Milliliters'), ('l', 'Liters'), ('pcs', 'Pieces')], help_text='Default unit for recipes', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Soft delete')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingredients_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingredients_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Product name (e.g., Bread, KDF, Scones)', max_length=100)),
                ('alias', models.CharField(blank=True, help_text="Unit alias (e.g., 'Loaves' for Bread, 'Pieces' for KDF)", max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True, help_text='Soft delete - preserves historical data')),
                ('has_variable_output', models.BooleanField(default=False, help_text='True for KDF (hand-cut, variable), False for machine-weighed products')),
                ('baseline_output', models.IntegerField(help_text='Expected units per mix (e.g., 132 for Bread, 107 for KDF)')),
                ('min_expected_output', models.IntegerField(blank=True, help_text='Minimum output for variable products (e.g., 98 for KDF)', null=True)),
                ('max_expected_output', models.IntegerField(blank=True, help_text='Maximum output for variable products (e.g., 107 for KDF)', null=True)),
                ('units_per_packet', models.IntegerField(default=1, help_text='Units per packet (Bread=1, KDF=12, Scones=12)')),
                ('packet_label', models.CharField(default='packet', help_text="Label for packet (e.g., 'dozen', 'loaf', 'packet')", max_length=50)),
                ('price_per_packet', models.DecimalField(decimal_places=2, help_text='Selling price per packet in KES', max_digits=10)),
                ('has_sub_product', models.BooleanField(default=False, help_text='True if this product has rejects/sub-products')),
                ('sub_product_name', models.CharField(blank=True, help_text="Name of sub-product (e.g., 'Bread Rejects')", max_length=100)),
                ('sub_product_price', models.DecimalField(blank=True, decimal_places=2, help_text='Selling price for sub-product in KES (e.g., KES 50 for Bread Rejects)', max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Mix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Mix name (e.g., 'Standard Bread Mix', 'Mix 1')", max_length=200)),
                ('version', models.IntegerField(default=1, help_text='Track recipe changes (increment on modifications)')),
                ('is_active', models.BooleanField(default=True, help_text='Only one active mix per product recommended')),
                ('expected_packets', models.IntegerField(help_text='How many packets this mix produces (e.g., 132 for Bread Mix 1)')),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: Sum of all MixIngredients costs', max_digits=12)),
                ('cost_per_packet', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: total_cost / expected_packets', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Preparation notes or special instructions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mixes_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mixes_updated', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(help_text='Product this mix produces', on_delete=django.db.models.deletion.CASCADE, related_name='mixes', to='products.product')),
            ],
            options={
                'verbose_name': 'Mix (Recipe)',
                'verbose_name_plural': 'Mixes (Recipes)',
                'ordering': ['product__name', '-version'],
                'unique_together': {('product', 'name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='MixIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='‚úèÔ∏è MANUAL: Amount needed (e.g., 36.000 for Bread flour)', max_digits=10)),
                ('unit', models.CharField(choices=[('g', 'Grams'), ('kg', 'Kilograms'), ('ml', 'Milliliters'), ('l', 'Liters'), ('pcs', 'Pieces')], help_text='‚úèÔ∏è MANUAL: Unit for this ingredient', max_length=20)),
                ('ingredient_cost', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: quantity √ó Inventory cost_per_recipe_unit', max_digits=12)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(help_text='User who added this ingredient to the mix', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ingredient', models.ForeignKey(help_text='Ingredient from master list', on_delete=django.db.models.deletion.PROTECT, to='products.ingredient')),
                ('mix', models.ForeignKey(help_text='Parent mix', on_delete=django.db.models.deletion.CASCADE, related_name='mixingredient_set', to='products.mix')),
            ],
            options={
                'verbose_name': 'Mix Ingredient',
                'verbose_name_plural': 'Mix Ingredients',
                'ordering': ['ingredient__name'],
                'unique_together': {('mix', 'ingredient')},
            },
        ),
    ]
