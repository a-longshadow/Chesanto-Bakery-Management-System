# Generated by Django 5.2.7 on 2025-10-27 13:05

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0002_ingredient_inventory_item'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailySales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Sales date', unique=True)),
                ('total_dispatched', models.IntegerField(default=0, help_text='ü§ñ AUTO: Total units dispatched today')),
                ('total_expected_revenue', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: Sum of all dispatch expected revenues', max_digits=12)),
                ('total_actual_revenue', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: Sum of all cash returned', max_digits=12)),
                ('total_revenue_deficit', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: expected - actual', max_digits=12)),
                ('total_commissions', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: Sum of all commissions earned', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_sales_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_sales_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Daily Sales',
                'verbose_name_plural': 'Daily Sales',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Salesperson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Full name (e.g., 'John Doe', 'Okiya Depot', 'St. Mary School')", max_length=200)),
                ('recipient_type', models.CharField(choices=[('SALESMAN', 'Salesman'), ('SCHOOL', 'School'), ('DEPOT', 'Depot'), ('OTHER', 'Other')], default='SALESMAN', help_text='Type of recipient', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('location', models.CharField(blank=True, help_text='Area/location/route', max_length=200)),
                ('commission_per_bread', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Commission per bread loaf (KES)', max_digits=6)),
                ('commission_per_kdf', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Commission per KDF packet (KES)', max_digits=6)),
                ('commission_per_scones', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Commission per scones packet (KES)', max_digits=6)),
                ('sales_target', models.DecimalField(decimal_places=2, default=Decimal('35000.00'), help_text='Monthly sales target (KES) for bonus eligibility', max_digits=10)),
                ('bonus_commission_rate', models.DecimalField(decimal_places=2, default=Decimal('7.00'), help_text='Bonus commission % for sales above target', max_digits=5)),
                ('is_active', models.BooleanField(default=True, help_text='Soft delete')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salespeople_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salespeople_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(blank=True, help_text='Linked user account (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salesperson_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Salesperson',
                'verbose_name_plural': 'Salespeople',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dispatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Dispatch date')),
                ('crates_dispatched', models.IntegerField(default=0, help_text='‚úèÔ∏è MANUAL: Number of crates dispatched')),
                ('expected_revenue', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: Sum of all DispatchItem.expected_revenue', max_digits=12)),
                ('is_returned', models.BooleanField(default=False, help_text='True when salesperson returns with sales data')),
                ('returned_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispatches_created', to=settings.AUTH_USER_MODEL)),
                ('salesperson', models.ForeignKey(help_text='Recipient (salesperson/school/depot)', on_delete=django.db.models.deletion.PROTECT, related_name='dispatches', to='sales.salesperson')),
            ],
            options={
                'verbose_name': 'Dispatch',
                'verbose_name_plural': 'Dispatches',
                'ordering': ['-date', 'salesperson__name'],
                'unique_together': {('date', 'salesperson')},
            },
        ),
        migrations.CreateModel(
            name='SalesReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_date', models.DateField(help_text='‚úèÔ∏è MANUAL: Date when salesperson returned')),
                ('return_time', models.TimeField(blank=True, help_text='‚úèÔ∏è MANUAL: Time of return', null=True)),
                ('crates_returned', models.IntegerField(default=0, help_text='‚úèÔ∏è MANUAL: Crates returned')),
                ('crates_deficit', models.IntegerField(default=0, help_text='ü§ñ AUTO: crates_dispatched - crates_returned')),
                ('cash_returned', models.DecimalField(decimal_places=2, default=0, help_text='‚úèÔ∏è MANUAL: Cash/M-Pesa amount returned (KES)', max_digits=12)),
                ('revenue_deficit', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: expected_revenue - cash_returned', max_digits=12)),
                ('per_unit_commission', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: Sum of (units_sold √ó commission_per_unit)', max_digits=10)),
                ('bonus_commission', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: 7% of sales above KES 35,000 target', max_digits=10)),
                ('total_commission', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: per_unit_commission + bonus_commission', max_digits=10)),
                ('deficit_reason', models.TextField(blank=True, help_text='‚úèÔ∏è MANUAL: Reason for deficit (expired stock, damage, etc.)')),
                ('deficit_resolved', models.BooleanField(default=False, help_text='True when deficit issue resolved')),
                ('deficit_alert_sent', models.BooleanField(default=False, help_text='ü§ñ AUTO: True if alert sent to Accountant/CEO')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_returns_created', to=settings.AUTH_USER_MODEL)),
                ('dispatch', models.OneToOneField(help_text='Linked dispatch record', on_delete=django.db.models.deletion.CASCADE, related_name='sales_return', to='sales.dispatch')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_returns_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sales Return',
                'verbose_name_plural': 'Sales Returns',
                'ordering': ['-return_date'],
            },
        ),
        migrations.CreateModel(
            name='DispatchItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(help_text='‚úèÔ∏è MANUAL: Units/packets dispatched')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: From ProductionBatch.cost_per_packet (latest)', max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: From Product.price_per_packet', max_digits=10)),
                ('expected_revenue', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: quantity √ó selling_price', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dispatch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispatchitem_set', to='sales.dispatch')),
                ('product', models.ForeignKey(help_text='Product dispatched (Bread/KDF/Scones)', on_delete=django.db.models.deletion.PROTECT, to='products.product')),
            ],
            options={
                'verbose_name': 'Dispatch Item',
                'verbose_name_plural': 'Dispatch Items',
                'ordering': ['product__name'],
                'unique_together': {('dispatch', 'product')},
            },
        ),
        migrations.CreateModel(
            name='SalesReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units_dispatched', models.IntegerField(default=0, help_text='ü§ñ AUTO: From DispatchItem.quantity')),
                ('units_returned', models.IntegerField(default=0, help_text='‚úèÔ∏è MANUAL: Units returned unsold')),
                ('units_damaged', models.IntegerField(default=0, help_text='‚úèÔ∏è MANUAL: Units damaged (not sellable)')),
                ('units_sold', models.IntegerField(default=0, help_text='ü§ñ AUTO: dispatched - returned - damaged')),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: From Product.price_per_packet', max_digits=10)),
                ('gross_sales', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: units_sold √ó selling_price', max_digits=12)),
                ('damaged_value', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: units_damaged √ó selling_price', max_digits=12)),
                ('net_sales', models.DecimalField(decimal_places=2, default=0, help_text='ü§ñ AUTO: gross_sales - damaged_value', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(help_text='Product (Bread/KDF/Scones)', on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('sales_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salesreturnitem_set', to='sales.salesreturn')),
            ],
            options={
                'verbose_name': 'Sales Return Item',
                'verbose_name_plural': 'Sales Return Items',
                'ordering': ['product__name'],
                'unique_together': {('sales_return', 'product')},
            },
        ),
    ]
