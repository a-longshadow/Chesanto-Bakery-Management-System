# Generated by Django 5.2.7 on 2025-10-27 09:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(choices=[('RAW_MATERIALS', 'Raw Materials'), ('PACKAGING', 'Packaging'), ('FUEL_ENERGY', 'Fuel & Energy'), ('CONSUMABLES', 'Consumables'), ('OTHER', 'Other')], max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expense_categories_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expense Category',
                'verbose_name_plural': 'Expense Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Item name (e.g., Wheat Flour)', max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('purchase_unit', models.CharField(choices=[('kg', 'Kilograms'), ('g', 'Grams'), ('l', 'Liters'), ('ml', 'Milliliters'), ('pcs', 'Pieces'), ('bag', 'Bag'), ('jerycan', 'Jerycan'), ('packet', 'Packet')], help_text="Unit for purchasing (e.g., 'bag' for 50kg bag)", max_length=20)),
                ('recipe_unit', models.CharField(choices=[('kg', 'Kilograms'), ('g', 'Grams'), ('l', 'Liters'), ('ml', 'Milliliters'), ('pcs', 'Pieces'), ('bag', 'Bag'), ('jerycan', 'Jerycan'), ('packet', 'Packet')], help_text="Unit for recipes (e.g., 'kg')", max_length=20)),
                ('conversion_factor', models.DecimalField(decimal_places=3, default=1, help_text='Convert purchase_unit to recipe_unit (e.g., 50 for 50kg bag)', max_digits=10)),
                ('current_stock', models.DecimalField(decimal_places=3, default=0, help_text='Current stock in recipe_unit', max_digits=12)),
                ('reorder_level', models.DecimalField(decimal_places=3, help_text='Alert when stock falls below this (7 days supply)', max_digits=10)),
                ('cost_per_purchase_unit', models.DecimalField(decimal_places=2, help_text='Cost per purchase_unit in KES (e.g., KES 3,650 per 50kg bag)', max_digits=12)),
                ('cost_per_recipe_unit', models.DecimalField(decimal_places=2, help_text='ðŸ¤– AUTO: cost_per_purchase_unit / conversion_factor', max_digits=12)),
                ('low_stock_alert', models.BooleanField(default=False, help_text='ðŸ¤– AUTO: True if current_stock < reorder_level')),
                ('days_remaining', models.IntegerField(default=0, help_text='ðŸ¤– AUTO: Calculated from usage rate')),
                ('is_active', models.BooleanField(default=True, help_text='Soft delete')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(help_text='Expense category', on_delete=django.db.models.deletion.PROTECT, related_name='items', to='inventory.expensecategory')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventorySnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_date', models.DateField(unique=True)),
                ('total_items', models.IntegerField(default=0)),
                ('total_value', models.DecimalField(decimal_places=2, default=0, help_text='Sum of (current_stock Ã— cost_per_recipe_unit) for all items', max_digits=12)),
                ('low_stock_items_count', models.IntegerField(default=0, help_text='Count of items with low_stock_alert=True')),
                ('data', models.JSONField(default=dict, help_text='Complete snapshot of all inventory items')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_snapshots_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Snapshot',
                'verbose_name_plural': 'Inventory Snapshots',
                'ordering': ['-snapshot_date'],
            },
        ),
        migrations.CreateModel(
            name='RestockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_level', models.CharField(choices=[('LOW', 'Low Stock (< 7 days)'), ('CRITICAL', 'Critical Stock (< 3 days)'), ('OUT', 'Out of Stock')], max_length=20)),
                ('days_remaining', models.IntegerField()),
                ('message', models.TextField()),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restock_alerts_acknowledged', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restock_alerts', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Restock Alert',
                'verbose_name_plural': 'Restock Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('PURCHASE', 'Purchase Receipt'), ('PRODUCTION', 'Production Usage'), ('DAMAGE', 'Damage/Wastage'), ('ADJUSTMENT', 'Stock Adjustment'), ('RETURN', 'Supplier Return')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Positive for additions, negative for deductions', max_digits=10)),
                ('unit', models.CharField(max_length=20)),
                ('reference_type', models.CharField(blank=True, help_text="e.g., 'Purchase', 'ProductionBatch', 'Damage'", max_length=50)),
                ('reference_id', models.IntegerField(blank=True, help_text='ID of related object', null=True)),
                ('notes', models.TextField(blank=True)),
                ('stock_before', models.DecimalField(decimal_places=3, max_digits=12)),
                ('stock_after', models.DecimalField(decimal_places=3, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements_created', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movements', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=200)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('payment_terms', models.CharField(blank=True, help_text="e.g., 'Net 30 days', 'Cash on delivery'", max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suppliers_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_number', models.CharField(help_text='Auto-generated: PUR-YYYYMMDD-XXX', max_length=50, unique=True)),
                ('purchase_date', models.DateField()),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ORDERED', 'Ordered'), ('RECEIVED', 'Received'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, help_text='ðŸ¤– AUTO: Sum of all purchase items', max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases_updated', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='inventory.supplier')),
            ],
            options={
                'verbose_name': 'Purchase',
                'verbose_name_plural': 'Purchases',
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='UnitConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_unit', models.CharField(max_length=20)),
                ('to_unit', models.CharField(max_length=20)),
                ('factor', models.DecimalField(decimal_places=3, help_text='Multiply by this to convert from_unit to to_unit', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text="e.g., '1 bag = 50kg'")),
            ],
            options={
                'verbose_name': 'Unit Conversion',
                'verbose_name_plural': 'Unit Conversions',
                'ordering': ['from_unit', 'to_unit'],
                'unique_together': {('from_unit', 'to_unit')},
            },
        ),
        migrations.CreateModel(
            name='WastageRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage_type', models.CharField(choices=[('SPILL', 'Spill'), ('EXPIRED', 'Expired'), ('DAMAGED', 'Damaged in Transit'), ('CONTAMINATED', 'Contaminated'), ('OTHER', 'Other')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantity damaged (in recipe_unit)', max_digits=10)),
                ('cost', models.DecimalField(decimal_places=2, help_text='ðŸ¤– AUTO: quantity Ã— cost_per_recipe_unit', max_digits=12)),
                ('damage_date', models.DateField()),
                ('description', models.TextField(help_text='Detailed description of damage')),
                ('requires_approval', models.BooleanField(default=False, help_text='ðŸ¤– AUTO: True if cost > KES 500')),
                ('approval_status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='CEO approval required for > KES 500', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wastage_approvals', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wastage_records_created', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wastage_records', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Wastage Record',
                'verbose_name_plural': 'Wastage Records',
                'ordering': ['-damage_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantity in purchase_unit', max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, help_text='Cost per purchase_unit in KES', max_digits=12)),
                ('total_cost', models.DecimalField(decimal_places=2, help_text='ðŸ¤– AUTO: quantity Ã— unit_cost', max_digits=12)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_items', to='inventory.inventoryitem')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseitem_set', to='inventory.purchase')),
            ],
            options={
                'verbose_name': 'Purchase Item',
                'verbose_name_plural': 'Purchase Items',
                'ordering': ['item__name'],
                'unique_together': {('purchase', 'item')},
            },
        ),
    ]
