# Generated by Django 5.2.7 on 2025-10-16 08:55

import apps.core.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('first_name', models.CharField(help_text='Required', max_length=100)),
                ('middle_names', models.CharField(blank=True, help_text='Optional. Multiple middle names separated by spaces', max_length=200)),
                ('last_name', models.CharField(help_text='Required', max_length=100)),
                ('mobile_primary', models.CharField(help_text='Primary contact (+254XXXXXXXXX or 07XXXXXXXX)', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+254712345678' or '0712345678'", regex='^\\+?254\\d{9}$|^0\\d{9}$')])),
                ('mobile_secondary', models.CharField(blank=True, help_text='Secondary contact (optional)', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+254712345678' or '0712345678'", regex='^\\+?254\\d{9}$|^0\\d{9}$')])),
                ('mobile_tertiary', models.CharField(blank=True, help_text='Tertiary contact (optional)', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+254712345678' or '0712345678'", regex='^\\+?254\\d{9}$|^0\\d{9}$')])),
                ('profile_photo', models.ImageField(blank=True, help_text='Max 5MB. Supported: JPG, PNG', null=True, upload_to='profiles/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('photo_uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('photo_center_x', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Horizontal center (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('photo_center_y', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Vertical center (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('employee_id', models.CharField(blank=True, db_index=True, help_text='e.g., CHE001, CHE028 (optional - only for employees with payroll)', max_length=20, null=True, unique=True)),
                ('national_id', models.CharField(blank=True, help_text='National ID (7-8 digits) - optional for superadmins', max_length=20, null=True, unique=True, validators=[apps.core.validators.validate_kenyan_national_id])),
                ('position', models.CharField(blank=True, help_text='Job title', max_length=100)),
                ('department', models.CharField(blank=True, help_text='Production, Sales, Dispatch, etc.', max_length=100)),
                ('basic_salary', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly basic salary (KES) - tracked for expense calculations', max_digits=10, null=True)),
                ('pay_per_day', models.DecimalField(blank=True, decimal_places=2, help_text='Auto-calculated: basic_salary / 30', max_digits=10, null=True)),
                ('overtime_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Per mix for production staff (KES)', max_digits=10, null=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=Decimal('7.00'), help_text='% above target (default: 7%)', max_digits=5)),
                ('sales_target', models.DecimalField(decimal_places=2, default=Decimal('35000.00'), help_text='Monthly sales target (KES)', max_digits=10)),
                ('date_hired', models.DateField(blank=True, null=True)),
                ('date_terminated', models.DateField(blank=True, null=True)),
                ('employment_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('TERMINATED', 'Terminated')], db_index=True, default='ACTIVE', max_length=20)),
                ('current_loan_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Outstanding loan (KES) - tracked for monthly expenses', max_digits=10)),
                ('current_advance_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Advance payment balance (KES)', max_digits=10)),
                ('role', models.CharField(choices=[('SUPERADMIN', 'CEO / Developer'), ('ADMIN', 'Accountant'), ('PRODUCT_MANAGER', 'Production Manager'), ('DEPT_HEAD', 'Department Head'), ('DISPATCH', 'Dispatch Officer'), ('SALESMAN', 'Sales Representative'), ('SECURITY', 'Gate Man / Security')], db_index=True, max_length=20)),
                ('is_approved', models.BooleanField(db_index=True, default=False)),
                ('must_change_password', models.BooleanField(default=False)),
                ('last_password_login', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('custom_permissions', models.JSONField(blank=True, default=dict, help_text='Custom permissions set by superadmin')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_created', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('photo_uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photos_uploaded', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_updated', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'accounts_user',
            },
        ),
        migrations.CreateModel(
            name='EmailOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_hash', models.CharField(max_length=255)),
                ('purpose', models.CharField(choices=[('LOGIN', 'Login'), ('PASSWORD_RESET', 'Password Reset')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.IntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_email_otp',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.CharField(db_index=True, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_email_verification_token',
            },
        ),
        migrations.CreateModel(
            name='UserInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('full_name', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('SUPERADMIN', 'CEO / Developer'), ('ADMIN', 'Accountant'), ('PRODUCT_MANAGER', 'Production Manager'), ('DEPT_HEAD', 'Department Head'), ('DISPATCH', 'Dispatch Officer'), ('SALESMAN', 'Sales Representative'), ('SECURITY', 'Gate Man / Security')], max_length=20)),
                ('temp_password', models.CharField(max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_user_invitation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfileChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(db_index=True, max_length=100)),
                ('old_value', models.TextField(blank=True)),
                ('new_value', models.TextField(blank=True)),
                ('change_reason', models.TextField(blank=True, help_text='Optional reason')),
                ('changed_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile_changes_made', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_changes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'accounts_user_profile_change',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='accounts_us_email_74c8d6_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['employee_id'], name='accounts_us_employe_0cbd94_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='accounts_us_role_1fa9a5_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['employment_status'], name='accounts_us_employm_fa337b_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active', 'is_approved'], name='accounts_us_is_acti_b7b5de_idx'),
        ),
        migrations.AddIndex(
            model_name='emailotp',
            index=models.Index(fields=['user', 'purpose', '-created_at'], name='accounts_em_user_id_874927_idx'),
        ),
        migrations.AddIndex(
            model_name='emailotp',
            index=models.Index(fields=['expires_at'], name='accounts_em_expires_c47703_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['token'], name='accounts_em_token_5a6f4a_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['user', 'email'], name='accounts_em_user_id_3b37da_idx'),
        ),
        migrations.AddIndex(
            model_name='userinvitation',
            index=models.Index(fields=['email'], name='accounts_us_email_4fcb68_idx'),
        ),
        migrations.AddIndex(
            model_name='userinvitation',
            index=models.Index(fields=['expires_at'], name='accounts_us_expires_b20ee6_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofilechange',
            index=models.Index(fields=['user', '-changed_at'], name='accounts_us_user_id_9aeea4_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofilechange',
            index=models.Index(fields=['changed_by'], name='accounts_us_changed_14c320_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofilechange',
            index=models.Index(fields=['field_name'], name='accounts_us_field_n_00751d_idx'),
        ),
    ]
